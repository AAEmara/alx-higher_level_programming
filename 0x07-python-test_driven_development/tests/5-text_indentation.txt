Testing ``5-text_indentation`` module.
======================================

This doctest tests only one function
called ``text_indentation(text)``.
======================================

Importing the function from the module:

    >>> text_indentation = __import__("5-text_indentation").text_indentation

Text must be a string:

    >>> text_indentation("Hello? Somebody is here?") #a string input.
    Hello?
    <BLANKLINE>
    Somebody is here?
    <BLANKLINE>

::

    >>> text_indentation(12345) #an integer not a string input.
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(None) #input is None.
    Traceback (most recent call last):
    TypeError: text must be a string

Two newlines are printed after each of these characters '.', '?', ':':

    >>> text_indentation("We live in a beautiful world. Don't you think so?")
    We live in a beautiful world.
    <BLANKLINE>
    Don't you think so?
    <BLANKLINE>

::

    >>> text_indentation("Save this name: Abdelrahman Emara.")
    Save this name:
    <BLANKLINE>
    Abdelrahman Emara.
    <BLANKLINE>

In the formatted output, there should be no spaces at the beginning or at the
end of each line:

    >>> text_indentation(" Hello? Can you here me? I'm your soul.   ")
    Hello?
    <BLANKLINE>
    Can you here me?
    <BLANKLINE>
    I'm your soul.
    <BLANKLINE>

Arguments isn't provided (missing argument):

    >>> text_indentation() #missing the text argument.
    Traceback (most recent call last):
    TypeError: text_indentation() missing 1 required positional argument: 'text'
